#!/bin/bash

CONFIG="$HOME/.config/mimi/mime.conf"

find_in_config() {
    [[ -r $CONFIG ]] || return
    grep -m 1 "^$1" $CONFIG | cut -d ' ' -f 2-
}

need_terminal() {
    grep -m 1 "^Terminal=true$" "$1"
}

find_cmd() {
    grep -m 1 "^Exec=" $1 | cut -d = -f 2 | cut -d ' ' -f 1
}

find_terminal() {
    find_app_by Categories TerminalEmulator
}

find_app_by() {
    grep -m 1 "^$1=.*$2" -R /usr/share/applications/ | awk -F : -v pat="$2" '{ print index($2, pat), length($2), $1 }' | sort -t ' ' -k1,1n -k2,2n | head -n 1 | cut -d ' ' -f 3
}

usage() {
    cat <<EOF

Usage: xdg-open [file|directory|protocol]

It opens a file according to the extension
To setup the extension, create $CONFIG

mimi :)
EOF
exit 1
}

arg="$@"

if [[ "$arg" =~ ^file://(.*) ]]; then
    # strip file://
    arg="${BASH_REMATCH[1]}"
fi

if [[ -e "$arg" ]]; then
    # file or dir
    first_try=$(file -b --mime-type "$arg")
elif [[ "$arg" =~ ^([a-zA-Z]+): ]]; then
    # handle protocol
    protocol=${BASH_REMATCH[1]}
    if [[ $protocol == "http" || $protocol == "https" ]]; then
        first_try="text/html"
    elif [[ $protocol == "magnet" ]]; then
        first_try="application/x-bittorrent"
    else
        usage
    fi
else
    usage
fi

second_try=$(echo $first_try | cut -d / -f 1)/

for mime in $first_try $second_try; do
    echo "$arg: $mime"
    app=$(find_in_config $mime)
    desktop=$(find_app_by MimeType $mime)
    if [[ "$app" != "" ]]; then
        # has config and mime defined in config
        exec $app "$arg"
    elif [[ "$desktop" != "" ]]; then
        # find our own
        echo $desktop
        app=$(find_cmd $desktop)
        if [[ $(need_terminal $desktop) != "" && $(find_terminal) != "" ]]; then
            exec find_terminal -e $app "$arg"
        else
            exec $app "$arg"
        fi
    fi
done

usage
