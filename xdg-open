#!/bin/bash

CONFIG="$HOME/.config/mimi/mime.conf"

find_in_config() {
    [[ -r "$CONFIG" ]] || return
    grep -m 1 "^$1: " "$CONFIG" | cut -d ' ' -f 2-
}

need_terminal() {
    grep -m 1 "^Terminal=true$" "$1"
}

find_exec_in_desktop_file() {
    grep -m 1 "^Exec=" "$1" | cut -d = -f 2 | cut -d ' ' -f 1
}

find_terminal() {
    find_exec_in_desktop_file "$(find_desktop_file_by Categories TerminalEmulator)"
}

find_desktop_file_by() {
    grep -m 1 "^$1=.*$2" -R /usr/share/applications/ | awk -F : -v pat="$2" '{ print index($2, pat), length($2), $1 }' | sort -t ' ' -k1,1n -k2,2nr | head -n 1 | cut -d ' ' -f 3
}

usage() {
    cat <<EOF

Usage: xdg-open [file|directory|protocol]

It opens a file according to the extension
To setup the extension, create $CONFIG

mimi :)
EOF
exit 1
}

# 1. ext
# 2. protocol
# 3. mime
# 4. general mime
# 5. ask

arg="$@"
ext=""
protocol=""
mime=""

if [[ "$arg" =~ ^file://(.*) ]]; then
    # strip file://
    arg="${BASH_REMATCH[1]}"
    protocol="file"
fi

if [[ -e "$arg" ]]; then
    # file or dir
    mime="$(file -b --mime-type "$arg")"
    if [[ -f "$arg" ]]; then
        ext="${arg##*.}"
    fi
fi

# handle protocol
if [[ "$arg" =~ ^([a-zA-Z]+): ]]; then
    # use protocol to guess mime
    protocol="${BASH_REMATCH[1]}"
    if [[ "$protocol" == http || "$protocol" == https ]]; then
        mime=text/html
    elif [[ "$protocol" == magnet ]]; then
        mime=application/x-bittorrent
    elif [[ "$protocol" == irc ]]; then
        mime=x-scheme-handler/irc
    fi
fi


# application is too general
if [[ "$mime" =~ ^(audio|image|text|video)/ ]]; then
    general_mime="${mime%%/*}/"
else
    general_mime=""
fi

# 1. ext and 2. protocol
for search in $ext $protocol; do
    app="$(find_in_config "$search")"
    if [[ "$app" != "" ]]; then
         exec $app "$arg"
    fi
done

terminal="$(find_terminal)"
# 3. mime and 4. protocol
for search in $mime $general_mime; do
    echo "$search"
    app="$(find_in_config "$search")"
    if [[ "$app" != "" ]]; then
        # has config and mime defined in config
        exec $app "$arg"
    fi
    desktop="$(find_desktop_file_by MimeType "$search")"
    if [[ "$desktop" != "" ]]; then
        # find our own
        echo "$desktop"
        app="$(find_exec_in_desktop_file "$desktop")"
        if [[ "$(need_terminal "$desktop")" != "" && "$terminal" != "" ]]; then
            exec "$terminal" -e "$app" "$arg"
        else
            exec "$app" "$arg"
        fi
    fi
done

# 5. ask
if [[ "$terminal" != "" ]]; then
    exec "$terminal" -e xdg-open-ask "$arg"
fi

usage
