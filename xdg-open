#!/bin/bash

CONFIG="$HOME/.config/mimi/mime.conf"

find_in_config() {
    [[ -f "$CONFIG" ]] || return
    line=$(grep -m 1 "^$1: " "$CONFIG")
    if [[ $line == "" ]]; then
        type=$(echo $1 | cut -d / -f 1)
        line=$(grep -m 1 "^$type/[*]: " "$CONFIG")
    fi
    echo $line | cut -d ' ' -f 2-
}

need_terminal() {
    grep -m 1 "^Terminal=true$" "$1"
}

find_cmd() {
    grep -m 1 "^Exec=" /usr/share/applications/libreoffice-impress.desktop | cut -d = -f 2 | cut -d ' ' -f 1
}

find_terminal() {
    find_app_by Categories TerminalEmulator
}

find_app_by() {
    grep "$1=.*$2;" -R /usr/share/applications/ | awk -F : '{ print length($2), $0 }' | sort -n | head -n 1 | cut -d ' ' -f2 | cut -d : -f 1
}

usage() {
    cat <<EOF

Usage: xdg-open [file|directory|protocol]

It opens a file according to the extension
To setup the extension, create $CONFIG

mimi :)
EOF
exit 1
}

protocol=""
arg="$@"

if [[ "$arg" =~ ^file://(.*) ]]; then
    # strip file://
    arg="${BASH_REMATCH[1]}"
fi

if [[ -e "$arg" ]]; then
    # file or dir
    mime=$(file -b --mime-type "$arg")
    echo "$arg: $mime"
    app=$(find_in_config $mime)
    if [[ "$app" != "" ]]; then
        # has config and mime defined in config
        exec $app "$arg"
    else
        # find our own
        desktop=$(find_app_by MimeType $mime)
        if [[ "$desktop" != "" ]]; then
            app=$(find_cmd $desktop)
            if [[ $(need_terminal $desktop) != "" && $(find_terminal) != "" ]]; then
                exec find_terminal -e $app "$arg"
            else
                exec $app "$arg"
            fi
        else
            usage
        fi
    fi
else
    if [[ "$arg" =~ ^([a-zA-Z]+): ]]; then
        # handle protocol
        protocol=${BASH_REMATCH[1]}
    fi
    app=$(find_in_config $protocol)
    if [[ "$app" != "" ]]; then
        exec $app "$arg"
    else
        usage
    fi
fi
